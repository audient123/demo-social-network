{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","DialogItem","path","id","className","s","dialog","active","name","Message","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","AddMessageFormRedux","AddMessageForm","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","newMessageBody","dialogsItems","values","sendMessage","compose","dispatch","sendMessageCreator"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,qJCG9KC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAKVE,EAAmB,SAACC,GAAe,IAEtCC,EAFqC,uKAMnC,OAAKC,KAAKC,MAAMN,OAET,cAACG,EAAD,eAAeE,KAAKC,QAFI,cAAC,IAAD,CAAUC,GAAG,eANT,GAEXC,IAAML,WAYtC,OAFqCM,YAASX,EAATW,CAAsCL,K,2FCNhEM,EAXI,SAACJ,GAEhB,IAAIK,EAAO,YAAcL,EAAMM,GAE/B,OACI,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACI,cAAC,IAAD,CAAST,GAAII,EAAb,SAAoBL,EAAMW,UCDvBC,EAPC,SAACZ,GACb,OACI,qBAAKO,UAAWC,IAAEC,OAAlB,SACKT,EAAMa,W,yCCDbC,EAAcC,YAAiB,IAqBtBC,cAAU,CAACC,KAAM,2BAAjBD,EAlBQ,SAAChB,GACpB,OACI,uBAAMkB,SAAWlB,EAAMmB,aAAvB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,YAAY,qBACZZ,KAAK,iBACLa,SAAU,CAACC,IAAUX,OAGhC,8BACI,kDCsBVY,EAAsBV,YAAU,CAACC,KAAM,wBAAjBD,CAA0CW,GAEvDC,EAlCC,SAAC5B,GAEb,IAAIP,EAAQO,EAAM6B,YAEdC,EAAkBrC,EAAMsC,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAiBL,GAAI2B,EAAE3B,IAAZ2B,EAAE3B,OAC1E4B,EAAmBzC,EAAM0C,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAASvB,QAASuB,EAAEvB,QAAoBP,GAAI8B,EAAE9B,IAAZ8B,EAAE9B,OAC9Db,EAAM4C,eAQ3B,OAAKrC,EAAMN,OAIP,sBAAKa,UAAWC,IAAEuB,QAAlB,UACI,qBAAKxB,UAAWC,IAAE8B,aAAlB,SACKR,IAGL,qBAAKvB,UAAWC,IAAE2B,SAAlB,SACI,8BAAMD,MAEV,cAACR,EAAD,CAAqBR,SAhBT,SAACqB,GACjBvC,EAAMwC,YAAYD,EAAOF,sBAGH,cAAC,IAAD,CAAUpC,GAAI,Y,wBCA7BwC,sBACXtC,aAfkB,SAACV,GACnB,MAAO,CACHoC,YAAapC,EAAMoC,gBAIF,SAACa,GACtB,MAAO,CACHF,YAAa,SAACH,GACVK,EAASC,YAAmBN,SAOpCzC,IAFW6C,CAGbb","file":"static/js/4.a97e373e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1YlcU\",\"dialogsItems\":\"Dialogs_dialogsItems__1rjaR\",\"active\":\"Dialogs_active__3Uyrd\",\"messages\":\"Dialogs_messages__lckSx\",\"message\":\"Dialogs_message__35AxZ\"};","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n\r\n        render() {\r\n\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect (mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n\r\n","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import s from \"./../Dialogs.module.css\";\r\nimport React from \"react\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.dialog}>\r\n            {props.message}\r\n        </div>)\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit ={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       placeholder='Enter your message'\r\n                       name='newMessageBody'\r\n                       validate={[required, maxLength50]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nexport default reduxForm({form: 'dialog-add-message-form'})(AddMessageForm);","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} id={m.id}/>);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n)(Dialogs);\r\n\r\n"],"sourceRoot":""}